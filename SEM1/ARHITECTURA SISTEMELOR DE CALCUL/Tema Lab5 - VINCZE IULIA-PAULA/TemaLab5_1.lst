     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  import exit msvcrt.dll
     7                                  
     8                                  segment data use32 class=data
     9                                      ;a - byte, b - word, c - double word, d - qword
    10 00000000 0A                          a db 10
    11 00000001 1E00                        b dw 30
    12 00000003 50000000                    ce dd 80
    13 00000007 3200000000000000            d dq 50
    14                                      
    15                                  segment code use32 class=code
    16                                      start:
    17                                          ; (c-a-d)+(c-b)-a - VINCZE M. IULIA-PAULA
    18                                          ; - Interpretare fara semn
    19 00000000 A1[03000000]                    mov eax, [ce] ; eax = c
    20 00000005 BB00000000                      mov ebx, 0
    21 0000000A 8A1D[00000000]                  mov bl, [a] ; ebx = a
    22 00000010 29D8                            sub eax, ebx ; eax = c-a
    23 00000012 BA00000000                      mov edx, 0
    24 00000017 8B1D[07000000]                  mov ebx, [d]
    25 0000001D 8B0D[0B000000]                  mov ecx, [d+4] ; ecx:ebx = d
    26 00000023 29D8                            sub eax, ebx
    27 00000025 19CA                            sbb edx, ecx ; edx:eax = c-a-d
    28 00000027 8B1D[03000000]                  mov ebx, [ce] ; ebx = c
    29 0000002D B900000000                      mov ecx, 0
    30 00000032 668B0D[01000000]                mov cx, [b] ; ecx = b
    31 00000039 29CB                            sub ebx, ecx ; ebx = c-b
    32 0000003B 01D8                            add eax, ebx 
    33 0000003D 83D200                          adc edx, 0 ; edx:eax = (c-a-d)+(c-b)
    34 00000040 BB00000000                      mov ebx, 0
    35 00000045 8A1D[00000000]                  mov bl, [a] ; ebx = a
    36 0000004B 29D8                            sub eax, ebx
    37 0000004D 83DA00                          sbb edx, 0 ; edc:eax = (c-a-d)+(c-b)-a
    38                                          
    39 00000050 6A00                            push    dword 0
    40 00000052 FF15[00000000]                  call    [exit]
