     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions         
    10                                  ; our data is declared here (the variables needed by our program)
    11                                  segment data use32 class=data
    12 00000000 20                          ce db 32
    13 00000001 02                          d db 2
    14 00000002 03                          a db 3
    15 00000003 05                          b db 5
    16                                  ; our code starts here
    17                                  segment code use32 class=code
    18                                      start:
    19                                          ;c-(d+d+d)+(a-b)
    20 00000000 B800000000                      mov eax,0
    21 00000005 BB00000000                      mov ebx,0
    22 0000000A B900000000                      mov ecx,0 
    23 0000000F BA00000000                      mov edx,0
    24 00000014 A0[00000000]                    mov al, [ce]
    25 00000019 8A1D[01000000]                  mov bl, [d]
    26 0000001F 021D[01000000]                  add bl, [d]
    27 00000025 021D[01000000]                  add bl, [d]
    28 0000002B 6629D8                          sub ax, bx
    29 0000002E 8A1D[02000000]                  mov bl, [a]
    30 00000034 8A0D[03000000]                  mov cl, [b]
    31 0000003A 6629CB                          sub bx, cx
    32 0000003D 6601D8                          add ax, bx
    33                                          
    34 00000040 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    35 00000042 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
