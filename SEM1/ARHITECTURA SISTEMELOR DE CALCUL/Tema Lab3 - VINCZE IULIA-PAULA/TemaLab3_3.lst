     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 5E01                        a dw 350
    14 00000002 A002                        b dw 672
    15 00000004 C801                        ce dw 456
    16 00000006 D902                        d dw 729
    17                                      
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ;(c+c+c)-b+(d-a)
    22 00000000 B800000000                      mov eax, 0
    23 00000005 BB00000000                      mov ebx, 0
    24 0000000A B900000000                      mov ecx, 0
    25 0000000F 66A1[04000000]                  mov ax, [ce]
    26 00000015 660305[04000000]                add ax, [ce]
    27 0000001C 660305[04000000]                add ax, [ce]
    28 00000023 668B1D[02000000]                mov bx, [b]
    29 0000002A 6629D8                          sub ax, bx
    30 0000002D 668B1D[06000000]                mov bx, [d]
    31 00000034 668B0D[00000000]                mov cx, [a]
    32 0000003B 6629CB                          sub bx, cx
    33 0000003E 6601D8                          add ax, bx
    34                                          
    35                                          
    36 00000041 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 00000043 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
