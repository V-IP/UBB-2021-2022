     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit
     5                                  import exit msvcrt.dll
     6                                  
     7                                  segment data use32 class=data
     8 00000000 5777                        a dw 0111011101010111b ;30551
     9 00000002 BE9B                        b dw 1001101110111110b ;39870
    10 00000004 <res 00000004>              ce resd 1 ; c = 0000000001100101 1011 1010111 11111b = 65BAFFh
    11                                  segment code use32 class=code
    12                                      start:
    13                                          ; Se dau doua cuvinte A si B. Sa se obtina dublucuvantul C:
    14                                          ; bitii 0-4 ai lui C au valoarea 1
    15                                          ; bitii 5-11 ai lui C coincid cu bitii 0-6 ai lui A
    16                                          ; bitii 16-31 ai lui C au valoarea 0000000001100101b
    17                                          ; bitii 12-15 ai lui C coincid cu bitii 8-11 ai lui B
    18                                          
    19 00000000 830D[04000000]1F                or dword [ce], 01Fh ; c = 000000000000000000000000000011111 = 1Fh
    20                                          
    21 00000007 66A1[00000000]                  mov ax, [a] ; ax = 0111011101010111b = 7757h
    22 0000000D 66C1E005                        shl ax, 5 ;ax = 1110101011100000b = EAE0h
    23 00000011 66B97F00                        mov cx, 01111111b ;cx = 0000000001111111b = 7Fh
    24 00000015 66C1E105                        shl cx, 5 ;cx = 0000111111100000b = FE0h
    25 00000019 6621C8                          and ax, cx ;ax = 0000101011100000b = AE0h
    26 0000001C 660905[04000000]                or [ce], ax ; c = 00000000000000000000101011111111b = AFFh
    27                                          
    28 00000023 B800000000                      mov eax, 0 ;eax = 0b = 0h
    29 00000028 66B86500                        mov ax, 0000000001100101b ;eax = 00000000000000000000000001100101b = 65h
    30 0000002C C1E010                          shl eax, 16 ; eax = 00000000011001010000000000000000b = 650000h
    31 0000002F 0905[04000000]                  or [ce], eax ; c = 00000000011001010000101011111111b = 650AFFh
    32                                          
    33 00000035 66A1[02000000]                  mov ax, [b] ; ax = 1001101110111110b = 9BBEh
    34 0000003B 66C1E004                        shl ax, 4 ; ax = 1011101111100000b = BBE0h
    35 0000003F 66B90F00                        mov cx, 01111b ; cx = 0000000000001111b = Fh
    36 00000043 66C1E10C                        shl cx, 12 ; cx = 1111000000000000b = F000h
    37 00000047 6621C8                          and ax, cx ; ax = 1011000000000000b = 5800h
    38 0000004A 660905[04000000]                or [ce], ax ; c = 00000000011001011011101011111111b = 65BAFFh
    39                                          
    40 00000051 6A00                            push    dword 0
    41 00000053 FF15[00000000]                  call    [exit]
